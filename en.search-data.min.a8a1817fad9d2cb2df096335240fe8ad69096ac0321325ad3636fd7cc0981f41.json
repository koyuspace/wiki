[{"id":0,"href":"/docs/events/","title":"Events","section":"Docs","content":"Events #  \nThe Mumble client software in action  koyu.space Mumble meetups #  koyu.space Mumble meetups usually start on Saturdays at 20:00 CEST/CET. Which Saturdays hardly depend on when koyu expects mosts users to be online. A list of the upcoming Mumble meetups can be found below:\n 25.09.2021  Connecting to the Mumble server #  If you got the Mumble client software installed and set up on your computer you can click the Mumble link on the koyu.space front page.\n"},{"id":1,"href":"/docs/streaming/","title":"Livestreaming on koyu.space","section":"Docs","content":"Livestreaming on koyu.space #  koyu.space got a livestreaming server available at stream.koyu.space. Staff members can stream their favourite content to as long as they edit the schedule accordingly.\nGetting started #  If you\u0026rsquo;re an admin or moderator for more than 90 days you can kindly ask koyu to give you the credentials to the streaming server.\nAccess #  Admin dashboard #  The admin dashboard can be accessed here.\nStreaming keys #  Credentials #  The credentials are the following:\nStream URL: rtmp://stream.koyu.space/live/ Streaming key: \u0026lt;The key you got from koyu\u0026gt; Configuring OBS Studio #  You can use the auto-configuration wizard from OBS Studio to properly configure koyu.space Stream for streaming. If you notice frame drops or connection errors please properly configure the bitrate.\n"},{"id":2,"href":"/docs/services/","title":"Services","section":"Docs","content":"Services #  We currently got the following services:\n This Mastodon instance koyu.space Nitter koyu.space Forum koyu.space Stream koyu.space Misskey koyu.space Gemini Mumble server at mumble.koyu.space  "},{"id":3,"href":"/docs/dev/","title":"Setting up a dev environment","section":"Docs","content":"Setting up a dev environment #  Pre-requisites #   A machine running Ubuntu 20.04 or later that you have root access to  System repositorie #  Node.js #  curl -sL https://deb.nodesource.com/setup_12.x | sudo bash - Yarn #  curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \u0026#34;deb https://dl.yarnpkg.com/debian/ stable main\u0026#34; | sudo tee /etc/apt/sources.list.d/yarn.list System packages #  apt update apt install -y \\  imagemagick ffmpeg libpq-dev libxml2-dev libxslt1-dev file git-core \\  g++ libprotobuf-dev protobuf-compiler pkg-config nodejs gcc autoconf \\  bison build-essential libssl-dev libyaml-dev libreadline6-dev \\  zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev \\  redis-server redis-tools postgresql postgresql-contrib \\  yarn libidn11-dev libicu-dev libjemalloc-dev Installing Ruby #  We will be using rbenv to manage Ruby versions, because it’s easier to get the right versions and to update once a newer release comes out.\ngit clone https://github.com/rbenv/rbenv.git ~/.rbenv cd ~/.rbenv \u0026amp;\u0026amp; src/configure \u0026amp;\u0026amp; make -C src echo \u0026#39;export PATH=\u0026#34;$HOME/.rbenv/bin:$PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc echo \u0026#39;eval \u0026#34;$(rbenv init -)\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc exec bash git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build Once this is done, we can install the correct Ruby version:\nRUBY_CONFIGURE_OPTS=--with-jemalloc rbenv install 2.7.2 rbenv global 2.7.4 We’ll also need to install bundler:\ngem install bundler --no-document Setup #  Run following commands in the project directory bundle install, yarn install.\nIn the development environment, koyu.space will use PostgreSQL as the currently signed-in Linux user using the ident method, which usually works out of the box. The one command you need to run is rails db:setup which will create the databases mastodon_development and mastodon_test, load the schema into them, and then create seed data defined in db/seed.rb in mastodon_development. The only seed data is an admin account with the credentials admin@localhost:3000 / mastodonadmin.\n Please keep in mind, by default koyu.space will run on port 3000. If you configure a different port for it, the generated admin account will use that number.\n If rails db:setup gives you the Postgres error:\nActiveRecord::NoDatabaseError: FATAL: role \u0026quot;your_user_name\u0026quot; does not exist  (where your_user_name is your username), then run:\nsudo -u postgres createuser your_user_name --createdb  This will create the necessary Postgres user with the permission to create a database.\nRunning #  There are multiple processes that need to be run for the full set of Mastodon’s functionality, although they can be selectively omitted. To run all of them with just one command, you can install Foreman with gem install foreman --no-document and then use:\nforeman start In the koyu.space directory. This will start processes defined in Procfile.dev, which will give you: A Rails server, a Webpack server, a streaming API server, and Sidekiq. Of course, you can run any of those things stand-alone depending on your needs.\nTesting #     Command Description     rspec Run the Ruby test suite   yarn run test Run the JavaScript test suite   rubocop Check the Ruby code for conformance with our code style    "}]